<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Appointment Management</title>
    <link rel="stylesheet" href="/css/style.css" />
</head>

<body>
    <header>
        <h1>Appointment Management</h1>
        <nav>
            <a href="home">Home</a>
            <a href="employees">Employee Management</a>
            <a href="patients">Patient Management</a>
            <a href="pharmacy">Pharmacy Management</a>
        </nav>
    </header>

    <main>
        <section>
            <h2>Book an Appointment</h2>
            <form id="appointmentForm">
                <label for="patient_id">Patient ID:</label>
                <input type="number" id="patient_id" name="patient_id" required placeholder="Enter patient ID"><br><br>

                <label for="department_specialty">Department Specialty:</label>
                <input type="text" id="department_specialty" name="department_specialty" required
                    placeholder="e.g., Cardiology" pattern="[A-Za-z]"><br><br>

                <label for="appointment_date">Appointment Date:</label>
                <input type="datetime-local" id="appointment_date" name="appointment_date" required><br><br>

                <label for="reason">Reason:</label>
                <textarea id="reason" name="reason" required
                    placeholder="Enter the reason for the appointment"></textarea><br><br>

                <button type="submit">Book Appointment</button>
            </form>
        </section>

        <section>
            <h2>All Appointments</h2>
            <table id="appointmentTable">
                <thead>
                    <tr>
                        <th>Appointment ID</th>
                        <th>Patient ID</th>
                        <th>Department Specialty</th>
                        <th>Appointment Date</th>
                        <th>Reason</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </section>

        <section>
            <h2>Search Appointments</h2>
            <form id="searchAppointmentForm">
                <label for="search_appointment_id">Appointment ID:</label>
                <input type="number" id="search_appointment_id" name="search_appointment_id"
                    placeholder="Search by ID" min="1"><br><br>

                <label for="search_appointment_date">Appointment Date:</label>
                <input type="date" id="search_appointment_date" name="search_appointment_date"
                    max="9999-12-31"><br><br>

                <label for="search_patient_id">Patient ID:</label>
                <input type="number" id="search_patient_id" name="search_patient_id" min="1"><br><br>

                <label for="search_department_specialty">Department Specialty:</label>
                <input type="text" id="search_department_specialty" name="search_department_specialty"
                    pattern="[A-Za-z\s]+" title="Only letters and spaces are allowed"><br><br>

                <button type="submit">Search</button>
            </form>

            <table id="appointmentSearchTable">
                <thead>
                    <tr>
                        <th>Appointment ID</th>
                        <th>Patient ID</th>
                        <th>Department Specialty</th>
                        <th>Appointment Date</th>
                        <th>Reason</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </section>
    </main>

    <footer>
        <p>&copy; 2024 Abu al Qasim Al-Zahrawi Hospital. All Rights Reserved.</p>
    </footer>

    <script>
        const URL = "<%= url %>";

        function adjustTimeZone(dateString) {
            const date = new Date(dateString);
            date.setHours(date.getHours() - 3);
            return date;
        }

        document.getElementById('appointmentForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const newAppointment = {
                Patient_NID: document.getElementById('patient_id').value,
                Department_Specialty: document.getElementById('department_specialty').value,
                AppointmentDate: document.getElementById('appointment_date').value,
                Reason: document.getElementById('reason').value
            };

            const response = await fetch(URL + '/api/book_appointment', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(newAppointment)
            });

            if (response.ok) {
                alert('Appointment booked successfully!');
                fetchAppointments();
                document.getElementById('appointmentForm').reset();
            } else {
                const error = await response.json();
                alert(`Error: ${error.error}`);
            }
        });

        async function fetchAppointments() {
            const response = await fetch(URL + '/api/appointments');
            const appointments = await response.json();
            const tableBody = document.querySelector('#appointmentTable tbody');
            tableBody.innerHTML = '';
            appointments.forEach(appointment => {
                const appointmentDate = adjustTimeZone(appointment.appointmentdate);
                const formattedDate = appointmentDate.toISOString().split('T')[0];
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${appointment.appointment_id}</td>
                    <td>${appointment.patient_nid}</td>
                    <td>${appointment.department_specialty}</td>
                    <td>${formattedDate}</td>
                    <td>${appointment.reason}</td>
                    <td>
                        <button onclick="deleteAppointment(${appointment.appointment_id})">Delete</button>
                    </td>
                `;
                tableBody.appendChild(row);
            });
        }

        document.getElementById('searchAppointmentForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const appointment_id = document.getElementById('search_appointment_id').value;
            const date = document.getElementById('search_appointment_date').value;
            const patient_id = document.getElementById('search_patient_id').value;
            const department_specialty = document.getElementById('search_department_specialty').value;

            let query = URL + `/api/search_appointments?`;
            if (appointment_id) query += `appointment_id=${appointment_id}&`;
            if (date) query += `date=${date}&`;
            if (patient_id) query += `patient_id=${patient_id}&`;
            if (department_specialty) query += `department_specialty=${department_specialty}&`;

            const response = await fetch(query.slice(0, -1));
            const appointments = await response.json();
            const tableBody = document.querySelector('#appointmentSearchTable tbody');
            tableBody.innerHTML = '';
            appointments.forEach(appointment => {
                const appointmentDate = adjustTimeZone(appointment.appointmentdate);
                const formattedDate = appointmentDate.toISOString().split('T')[0];
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${appointment.appointment_id}</td>
                    <td>${appointment.patient_nid}</td>
                    <td>${appointment.department_specialty}</td>
                    <td>${formattedDate}</td>
                    <td>${appointment.reason}</td>
                    <td>
                        <button onclick="deleteAppointment(${appointment.appointment_id})">Delete</button>
                    </td>
                `;
                tableBody.appendChild(row);
            });
        });

        async function deleteAppointment(appointment_id) {
            const response = await fetch(URL + `/api/delete_appointment?appointment_id=${appointment_id}`, {
                method: 'DELETE'
            });
            if (response.ok) {
                alert('Appointment deleted successfully!');
                fetchAppointments();
            } else {
                const error = await response.json();
                alert(`Error: ${error.error}`);
            }
        }

        fetchAppointments();
    </script>
</body>

</html>